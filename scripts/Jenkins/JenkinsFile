node {
    def goHome = tool('Go 1.13.7')


    try{

        // ws("${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_ID}/src/github.com/rohan-luthra/microservice-grpc-go/service-restaurants-go") {
        //     withEnv(["GOROOT=${goHome}", "GOPATH=${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_ID}", "PATH+GO=${goHome}/bin"]) {

        ws("${JENKINS_HOME}/workspace/${JOB_NAME}/src/github.com/rohan-luthra/microservice-grpc-go/service-restaurants-go") {
        withEnv(["GOROOT=${goHome}", "GOPATH=${JENKINS_HOME}/workspace/${JOB_NAME}", "PATH+GO=${goHome}/bin"]) {

                stage('Checkout'){
                    echo 'Checking out SCM'
                    checkout scm
                    sh 'ls'
                    sh 'pwd'
                }

                
                stage('Setting Up Project'){
                    echo 'Pulling Dependencies'

                    sh 'go version'
                    sh 'go get -u github.com/golang/dep/cmd/dep'
                    sh 'go get -u golang.org/x/lint/golint'
                    // sh 'go get -u github.com/golang/lint/golint'
            
                    //or -update
                    sh '$GOPATH/bin/dep ensure -vendor-only -v'  
                }

                stage('Test'){

                    echo "Skiping linting"
                    // sh 'go lint src/*'

                    echo "Testing"
                    sh 'go test ./test -v'
                }

                stage('Dokcer Build'){

                        sh 'chmod +x ./docker-push.sh'
                        sh './docker-push.sh'

                }

            }
        }

    }catch (err){
        sh 'echo ERROR'
    }

    
}